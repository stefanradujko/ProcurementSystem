/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Narudzbenica;
import domen.StavkaNarudzbenice;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeli.ModelTabeleNarudzbenice;

/**
 *
 * @author Stefan
 */
public class FormaPBNar extends javax.swing.JFrame {
    boolean cekaj = true;
    boolean vrti = true;
    boolean flag = false;
    boolean prikazPoruke = false;
    ArrayList<StavkaNarudzbenice> listaS;
    FormaPrikazNar fpn;

    /**
     * Creates new form FormaPBNar
     */
    public FormaPBNar() {
        initComponents();
        btnPonisti.setEnabled(false);
        btnPrikazi.setEnabled(false);
        btnObrisi.setEnabled(false);
        srediTabeluInicijalno();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFKriterijum = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        btnPonisti = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNarudzbenice = new javax.swing.JTable();
        btnPrikazi = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pretraga i brisanje narudžbenice");

        jLabel1.setText("Kriterijum pretrage narudžbenica:");

        btnPretrazi.setText("Pretraži");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnPonisti.setText("Poništi filter");
        btnPonisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPonistiActionPerformed(evt);
            }
        });

        tblNarudzbenice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblNarudzbenice);

        btnPrikazi.setText("Prikaži podatke za izabranu narudžbenicu");
        btnPrikazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši izabranu narudžbenicu");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnPretrazi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPonisti))
                            .addComponent(txtFKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPrikazi, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnObrisi, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPretrazi)
                    .addComponent(btnPonisti))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrikazi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnObrisi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        cekaj = true;
        String kriterijum = txtFKriterijum.getText();
        if(kriterijum.isEmpty()){
            prikazPoruke = true;
        } else{
            prikazPoruke = false;
        }
        Kontroler.getInstanca().vratiNarudzbenice();
        if(!kriterijum.isEmpty()){
            while(cekaj){
                System.out.print("");
            }
            System.out.println("");
            try {
                vratiNarudzbeniceUslov(kriterijum);
            } catch (ParseException ex) {
                Logger.getLogger(FormaPBNar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnPonistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPonistiActionPerformed
        prikazPoruke = true;
        txtFKriterijum.setText("");
        Kontroler.getInstanca().vratiNarudzbenice();
    }//GEN-LAST:event_btnPonistiActionPerformed

    private void btnPrikaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziActionPerformed
        ModelTabeleNarudzbenice mtn = (ModelTabeleNarudzbenice) tblNarudzbenice.getModel();
        int red = tblNarudzbenice.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this, "Morate da odaberete red");
            return;
        }
        Narudzbenica n = mtn.vratiNarudzbenicu(red);
        Kontroler.getInstanca().vratiStavkeUslov(n);
    }//GEN-LAST:event_btnPrikaziActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ModelTabeleNarudzbenice mtn = (ModelTabeleNarudzbenice) tblNarudzbenice.getModel();
        int red = tblNarudzbenice.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this, "Morate da odaberete red");
            return;
        }
        Narudzbenica n = mtn.vratiNarudzbenicu(red);
        if(n.getStatus().equals("Obradjena")){
            JOptionPane.showMessageDialog(this, "Izabrana narudžbenica je već obrađena");
            return;
        }
        flag = true;
        Kontroler.getInstanca().vratiStavkeUslov(n);
        while(vrti){
            System.out.print("");
        }
        System.out.println("");
        n.setStavke(listaS);
        Kontroler.getInstanca().obrisiNarudzbenicu(n);
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaPBNar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaPBNar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaPBNar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaPBNar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaPBNar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPonisti;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnPrikazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNarudzbenice;
    private javax.swing.JTextField txtFKriterijum;
    // End of variables declaration//GEN-END:variables

    private void srediTabeluInicijalno() {
        ModelTabeleNarudzbenice mtn = new ModelTabeleNarudzbenice();
        tblNarudzbenice.setModel(mtn);
    }

    private void vratiNarudzbeniceUslov(String kriterijum) throws ParseException {
        ModelTabeleNarudzbenice mtn = (ModelTabeleNarudzbenice) tblNarudzbenice.getModel();
        ArrayList<Narudzbenica> lista = mtn.filtriraj(kriterijum);
        cekaj = true;
        if(lista.isEmpty()){
            JOptionPane.showMessageDialog(this, "Sistem ne može da pronađe narudžbenice za zadati parametar");
            return;
        }
        btnPonisti.setEnabled(true);
    }

    public void neuspesnoVracanjeNarudzbenica() {
        JOptionPane.showMessageDialog(this, "Sistem ne može da nađe narudžbenice za zadati parametar");
    }

    public void vraceneNarudzbenice(ArrayList<Narudzbenica> sveNarudzbenice) {
        if(prikazPoruke){
            JOptionPane.showMessageDialog(this, "Sistem je vratio sve narudžbenice");
        }
        srediTabelu(sveNarudzbenice);
    }

    private void srediTabelu(ArrayList<Narudzbenica> lista) {
        ModelTabeleNarudzbenice mtn = new ModelTabeleNarudzbenice(lista);
        tblNarudzbenice.setModel(mtn);
        btnPonisti.setEnabled(false);
        btnPrikazi.setEnabled(true);
        btnObrisi.setEnabled(true);
        cekaj = false;
    }

    public void neuspesnoVracanjeStavki() {
        JOptionPane.showMessageDialog(this, "Sistem ne može da učita stavke za izabranu narudžbenicu");
    }

    public void vraceneStavke(ArrayList<StavkaNarudzbenice> listaStavki) {
        if(flag){
            listaS = listaStavki;
            vrti = false;
            flag = false;
            return;
        }
        JOptionPane.showMessageDialog(this, "Sistem je uspešno učitao stavke za izabranu narudžbenicu");
        fpn = new FormaPrikazNar();
        fpn.setLocationRelativeTo(null);
        fpn.srediTabelu(listaStavki);
        fpn.setVisible(true);
    }

    public void brisanjeNarudzbenice(String poruka) {
        JOptionPane.showMessageDialog(this, poruka);
        vrti = true;
        prikazPoruke = true;
        Kontroler.getInstanca().vratiNarudzbenice();
    }

    public void eksport(String poruka) {
        JOptionPane.showMessageDialog(fpn, poruka);
        fpn.dispose();
        Kontroler.getInstanca().vratiNarudzbenice();
    }

    public void proverenePrivilegije(boolean odgovor) {
        fpn.proverenePrivilegije(odgovor);
    }
}
